schema {
    query: QueryRoot
}

type QueryRoot {
    person(id: Id!): Person!
    post(id: Id!): Post!
    tagged(tags: [String!]): [Taggable!]!
    search(keyword: String!): [SearchResult!]!
    inhabitants(country: Country!): [Person!]!
    locate(location: Location!): Person
    person_by_national_id(id: NationalId!): Person
}

type Person implements Taggable {
    id: Id!
    first_name: String!
    last_name: String!
    national_id: NationalId
    country: Country!
    friend: Person
    age: Int!
    tags: [String!]!
}

type Post implements Taggable {
    id: Id!
    title: String!
    tags: [String!]!
}

interface Taggable {
    id: Id!
    tags: [String!]!
}

union SearchResult = Post | Person

enum Country { SWEDEN GERMANY UGANDA }

input Location {
    lat: Int!
    lng: Int!
    coordinate_system: CoordinateSystem! = WSG64
}

scalar NationalId

enum CoordinateSystem { WSG64, MOO }
